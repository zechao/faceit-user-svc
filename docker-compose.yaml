services:
  db:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB:  ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      start_period: 5s
      interval: 30s
      timeout: 10s
      retries: 5
  nats:
    image: nats:latest
    ports:
      - ${NATS_PORT}:4222
      - "8222:8222"
  app:
    build: .
    environment:
      APP_ENV: ${APP_ENV}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      NATS_HOST: nats
      NATS_PORT: ${NATS_PORT}
      NATS_TOPIC: ${NATS_TOPIC}
      HTTP_HOST: localhost
      HTTP_PORT: ${HTTP_PORT}
    depends_on:
      db:
        condition: service_healthy
      nats:
        condition: service_started
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${HTTP_PORT}/health"]
      interval: 15s
      timeout: 10s
      retries: 5
volumes:
  postgres-data: